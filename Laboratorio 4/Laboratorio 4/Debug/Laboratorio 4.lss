
Laboratorio 4.elf:     file format elf32-avr

Sections:
Idx Name          Size      VMA       LMA       File off  Algn
  0 .data         00000000  00800100  00800100  0000022e  2**0
                  ALLOC, LOAD, DATA
  1 .text         000000bc  00000000  00000000  00000074  2**1
                  CONTENTS, ALLOC, LOAD, READONLY, CODE
  2 .comment      0000002f  00000000  00000000  0000022e  2**0
                  CONTENTS, READONLY
  3 .stack.descriptors.hdr 0000000e  00000000  00000000  0000025d  2**0
                  CONTENTS, READONLY
  4 .debug_aranges 00000040  00000000  00000000  0000026b  2**0
                  CONTENTS, READONLY, DEBUGGING
  5 .debug_info   00000980  00000000  00000000  000002ab  2**0
                  CONTENTS, READONLY, DEBUGGING
  6 .debug_abbrev 00000651  00000000  00000000  00000c2b  2**0
                  CONTENTS, READONLY, DEBUGGING
  7 .debug_line   000002bb  00000000  00000000  0000127c  2**0
                  CONTENTS, READONLY, DEBUGGING
  8 .debug_frame  00000088  00000000  00000000  00001538  2**2
                  CONTENTS, READONLY, DEBUGGING
  9 .debug_str    00000208  00000000  00000000  000015c0  2**0
                  CONTENTS, READONLY, DEBUGGING
 10 .debug_loc    000000ad  00000000  00000000  000017c8  2**0
                  CONTENTS, READONLY, DEBUGGING
 11 .debug_ranges 00000030  00000000  00000000  00001875  2**0
                  CONTENTS, READONLY, DEBUGGING
 12 .text         00000004  000001ac  000001ac  00000220  2**1
                  CONTENTS, ALLOC, LOAD, READONLY, CODE
 13 .note.gnu.avr.deviceinfo 00000040  00000000  00000000  000018a8  2**2
                  CONTENTS, READONLY, DEBUGGING
 14 .text.init    0000005e  000000cc  000000cc  00000140  2**1
                  CONTENTS, ALLOC, LOAD, READONLY, CODE
 15 .text.main    00000018  0000017e  0000017e  000001f2  2**1
                  CONTENTS, ALLOC, LOAD, READONLY, CODE
 16 .text.__vector_21 00000054  0000012a  0000012a  0000019e  2**1
                  CONTENTS, ALLOC, LOAD, READONLY, CODE
 17 .progmemx.data.Lista 00000010  000000bc  000000bc  00000130  2**0
                  CONTENTS, ALLOC, LOAD, READONLY, PROGMEMX
 18 .text.__dummy_fini 00000002  000001b4  000001b4  00000228  2**1
                  CONTENTS, ALLOC, LOAD, READONLY, CODE
 19 .text.__dummy_funcs_on_exit 00000002  000001b6  000001b6  0000022a  2**1
                  CONTENTS, ALLOC, LOAD, READONLY, CODE
 20 .text.__dummy_simulator_exit 00000002  000001b8  000001b8  0000022c  2**1
                  CONTENTS, ALLOC, LOAD, READONLY, CODE
 21 .text.exit    00000016  00000196  00000196  0000020a  2**1
                  CONTENTS, ALLOC, LOAD, READONLY, CODE
 22 .text._Exit   00000004  000001b0  000001b0  00000224  2**1
                  CONTENTS, ALLOC, LOAD, READONLY, CODE

Disassembly of section .text:

00000000 <__vectors>:
   0:	0c 94 34 00 	jmp	0x68	; 0x68 <__ctors_end>
   4:	0c 94 d6 00 	jmp	0x1ac	; 0x1ac <__bad_interrupt>
   8:	0c 94 d6 00 	jmp	0x1ac	; 0x1ac <__bad_interrupt>
   c:	0c 94 d6 00 	jmp	0x1ac	; 0x1ac <__bad_interrupt>
  10:	0c 94 d6 00 	jmp	0x1ac	; 0x1ac <__bad_interrupt>
  14:	0c 94 d6 00 	jmp	0x1ac	; 0x1ac <__bad_interrupt>
  18:	0c 94 d6 00 	jmp	0x1ac	; 0x1ac <__bad_interrupt>
  1c:	0c 94 d6 00 	jmp	0x1ac	; 0x1ac <__bad_interrupt>
  20:	0c 94 d6 00 	jmp	0x1ac	; 0x1ac <__bad_interrupt>
  24:	0c 94 d6 00 	jmp	0x1ac	; 0x1ac <__bad_interrupt>
  28:	0c 94 d6 00 	jmp	0x1ac	; 0x1ac <__bad_interrupt>
  2c:	0c 94 d6 00 	jmp	0x1ac	; 0x1ac <__bad_interrupt>
  30:	0c 94 d6 00 	jmp	0x1ac	; 0x1ac <__bad_interrupt>
  34:	0c 94 d6 00 	jmp	0x1ac	; 0x1ac <__bad_interrupt>
  38:	0c 94 d6 00 	jmp	0x1ac	; 0x1ac <__bad_interrupt>
  3c:	0c 94 d6 00 	jmp	0x1ac	; 0x1ac <__bad_interrupt>
  40:	0c 94 d6 00 	jmp	0x1ac	; 0x1ac <__bad_interrupt>
  44:	0c 94 d6 00 	jmp	0x1ac	; 0x1ac <__bad_interrupt>
  48:	0c 94 d6 00 	jmp	0x1ac	; 0x1ac <__bad_interrupt>
  4c:	0c 94 d6 00 	jmp	0x1ac	; 0x1ac <__bad_interrupt>
  50:	0c 94 d6 00 	jmp	0x1ac	; 0x1ac <__bad_interrupt>
  54:	0c 94 95 00 	jmp	0x12a	; 0x12a <__vector_21>
  58:	0c 94 d6 00 	jmp	0x1ac	; 0x1ac <__bad_interrupt>
  5c:	0c 94 d6 00 	jmp	0x1ac	; 0x1ac <__bad_interrupt>
  60:	0c 94 d6 00 	jmp	0x1ac	; 0x1ac <__bad_interrupt>
  64:	0c 94 d6 00 	jmp	0x1ac	; 0x1ac <__bad_interrupt>

00000068 <__ctors_end>:
  68:	11 24       	eor	r1, r1
  6a:	1f be       	out	0x3f, r1	; 63
  6c:	cf ef       	ldi	r28, 0xFF	; 255
  6e:	d8 e0       	ldi	r29, 0x08	; 8
  70:	de bf       	out	0x3e, r29	; 62
  72:	cd bf       	out	0x3d, r28	; 61

00000074 <__do_copy_data>:
  74:	e8 e6       	ldi	r30, 0x68	; 104
  76:	f0 e0       	ldi	r31, 0x00	; 0
  78:	40 e0       	ldi	r20, 0x00	; 0
  7a:	17 c0       	rjmp	.+46     	; 0xaa <__do_clear_bss+0x8>
  7c:	b5 91       	lpm	r27, Z+
  7e:	a5 91       	lpm	r26, Z+
  80:	35 91       	lpm	r19, Z+
  82:	25 91       	lpm	r18, Z+
  84:	05 91       	lpm	r16, Z+
  86:	07 fd       	sbrc	r16, 7
  88:	0c c0       	rjmp	.+24     	; 0xa2 <__do_clear_bss>
  8a:	95 91       	lpm	r25, Z+
  8c:	85 91       	lpm	r24, Z+
  8e:	ef 01       	movw	r28, r30
  90:	f9 2f       	mov	r31, r25
  92:	e8 2f       	mov	r30, r24
  94:	05 90       	lpm	r0, Z+
  96:	0d 92       	st	X+, r0
  98:	a2 17       	cp	r26, r18
  9a:	b3 07       	cpc	r27, r19
  9c:	d9 f7       	brne	.-10     	; 0x94 <__do_copy_data+0x20>
  9e:	fe 01       	movw	r30, r28
  a0:	04 c0       	rjmp	.+8      	; 0xaa <__do_clear_bss+0x8>

000000a2 <__do_clear_bss>:
  a2:	1d 92       	st	X+, r1
  a4:	a2 17       	cp	r26, r18
  a6:	b3 07       	cpc	r27, r19
  a8:	e1 f7       	brne	.-8      	; 0xa2 <__do_clear_bss>
  aa:	e8 36       	cpi	r30, 0x68	; 104
  ac:	f4 07       	cpc	r31, r20
  ae:	31 f7       	brne	.-52     	; 0x7c <__do_copy_data+0x8>
  b0:	0e 94 bf 00 	call	0x17e	; 0x17e <main>
  b4:	0c 94 cb 00 	jmp	0x196	; 0x196 <exit>

000000b8 <_exit>:
  b8:	f8 94       	cli

000000ba <__stop_program>:
  ba:	ff cf       	rjmp	.-2      	; 0xba <__stop_program>

Disassembly of section .text:

000001ac <__bad_interrupt>:
 1ac:	0c 94 00 00 	jmp	0	; 0x0 <__vectors>

Disassembly of section .text.init:

000000cc <init>:
 } 
}; 
 
void decremento(void){ 
 if (contador>0){ 
  contador--; 
  cc:	ac e7       	ldi	r26, 0x7C	; 124
  ce:	b0 e0       	ldi	r27, 0x00	; 0
  d0:	85 e0       	ldi	r24, 0x05	; 5
  d2:	8c 93       	st	X, r24
  d4:	ea e7       	ldi	r30, 0x7A	; 122
  d6:	f0 e0       	ldi	r31, 0x00	; 0
  d8:	10 82       	st	Z, r1
  da:	8c 91       	ld	r24, X
  dc:	80 62       	ori	r24, 0x20	; 32
  de:	8c 93       	st	X, r24
  e0:	8c 91       	ld	r24, X
  e2:	80 64       	ori	r24, 0x40	; 64
  e4:	8c 93       	st	X, r24
  e6:	8c 91       	ld	r24, X
  e8:	8f 77       	andi	r24, 0x7F	; 127
  ea:	8c 93       	st	X, r24
  ec:	80 81       	ld	r24, Z
  ee:	80 68       	ori	r24, 0x80	; 128
  f0:	80 83       	st	Z, r24
  f2:	80 81       	ld	r24, Z
  f4:	88 60       	ori	r24, 0x08	; 8
  f6:	80 83       	st	Z, r24
  f8:	80 81       	ld	r24, Z
  fa:	87 60       	ori	r24, 0x07	; 7
  fc:	80 83       	st	Z, r24
  fe:	ee e7       	ldi	r30, 0x7E	; 126
 100:	f0 e0       	ldi	r31, 0x00	; 0
 102:	80 81       	ld	r24, Z
 104:	80 62       	ori	r24, 0x20	; 32
 106:	80 83       	st	Z, r24
 108:	10 92 c1 00 	sts	0x00C1, r1	; 0x8000c1 <__TEXT_REGION_LENGTH__+0x7f80c1>
 10c:	8f ef       	ldi	r24, 0xFF	; 255
 10e:	8a b9       	out	0x0a, r24	; 10
 110:	1b b8       	out	0x0b, r1	; 11
 112:	84 b9       	out	0x04, r24	; 4
 114:	15 b8       	out	0x05, r1	; 5
 116:	87 b1       	in	r24, 0x07	; 7
 118:	8d 7f       	andi	r24, 0xFD	; 253
 11a:	87 b9       	out	0x07, r24	; 7
 11c:	87 b1       	in	r24, 0x07	; 7
 11e:	8b 7f       	andi	r24, 0xFB	; 251
 120:	87 b9       	out	0x07, r24	; 7
 122:	88 b1       	in	r24, 0x08	; 8
 124:	86 60       	ori	r24, 0x06	; 6
 126:	88 b9       	out	0x08, r24	; 8
 128:	08 95       	ret

Disassembly of section .text.main:

0000017e <main>:
}; 
 
 
int main(void)
{
	cli();
 17e:	f8 94       	cli
    init();
 180:	0e 94 66 00 	call	0xcc	; 0xcc <init>
	sei();
 184:	78 94       	sei
	ADCSRA |= (1<<ADSC);
 186:	ea e7       	ldi	r30, 0x7A	; 122
 188:	f0 e0       	ldi	r31, 0x00	; 0
 18a:	80 81       	ld	r24, Z
 18c:	80 64       	ori	r24, 0x40	; 64
 18e:	80 83       	st	Z, r24
    PORTB = (1<<PINB2);
 190:	84 e0       	ldi	r24, 0x04	; 4
 192:	85 b9       	out	0x05, r24	; 5
 194:	ff cf       	rjmp	.-2      	; 0x194 <main+0x16>

Disassembly of section .text.__vector_21:

0000012a <__vector_21>:
 } 
}; 
 
void decremento(void){ 
 if (contador>0){ 
  contador--; 
 12a:	1f 92       	push	r1
 12c:	0f 92       	push	r0
 12e:	0f b6       	in	r0, 0x3f	; 63
 130:	0f 92       	push	r0
 132:	11 24       	eor	r1, r1
 134:	8f 93       	push	r24
 136:	9f 93       	push	r25
 138:	af 93       	push	r26
 13a:	ef 93       	push	r30
 13c:	ff 93       	push	r31
 13e:	80 91 79 00 	lds	r24, 0x0079	; 0x800079 <__TEXT_REGION_LENGTH__+0x7f8079>
 142:	82 95       	swap	r24
 144:	8f 70       	andi	r24, 0x0F	; 15
 146:	90 e0       	ldi	r25, 0x00	; 0
 148:	a0 e0       	ldi	r26, 0x00	; 0
 14a:	84 54       	subi	r24, 0x44	; 68
 14c:	9f 4f       	sbci	r25, 0xFF	; 255
 14e:	af 4f       	sbci	r26, 0xFF	; 255
 150:	fc 01       	movw	r30, r24
 152:	84 91       	lpm	r24, Z
 154:	a7 fd       	sbrc	r26, 7
 156:	80 81       	ld	r24, Z
 158:	8b b9       	out	0x0b, r24	; 11
 15a:	ea e7       	ldi	r30, 0x7A	; 122
 15c:	f0 e0       	ldi	r31, 0x00	; 0
 15e:	80 81       	ld	r24, Z
 160:	80 61       	ori	r24, 0x10	; 16
 162:	80 83       	st	Z, r24
 164:	80 81       	ld	r24, Z
 166:	80 64       	ori	r24, 0x40	; 64
 168:	80 83       	st	Z, r24
 16a:	ff 91       	pop	r31
 16c:	ef 91       	pop	r30
 16e:	af 91       	pop	r26
 170:	9f 91       	pop	r25
 172:	8f 91       	pop	r24
 174:	0f 90       	pop	r0
 176:	0f be       	out	0x3f, r0	; 63
 178:	0f 90       	pop	r0
 17a:	1f 90       	pop	r1
 17c:	18 95       	reti

Disassembly of section .text.__dummy_fini:

000001b4 <_fini>:
 1b4:	08 95       	ret

Disassembly of section .text.__dummy_funcs_on_exit:

000001b6 <__funcs_on_exit>:
 1b6:	08 95       	ret

Disassembly of section .text.__dummy_simulator_exit:

000001b8 <__simulator_exit>:
 1b8:	08 95       	ret

Disassembly of section .text.exit:

00000196 <exit>:
 196:	ec 01       	movw	r28, r24
 198:	0e 94 db 00 	call	0x1b6	; 0x1b6 <__funcs_on_exit>
 19c:	0e 94 da 00 	call	0x1b4	; 0x1b4 <_fini>
 1a0:	ce 01       	movw	r24, r28
 1a2:	0e 94 dc 00 	call	0x1b8	; 0x1b8 <__simulator_exit>
 1a6:	ce 01       	movw	r24, r28
 1a8:	0e 94 d8 00 	call	0x1b0	; 0x1b0 <_Exit>

Disassembly of section .text._Exit:

000001b0 <_Exit>:
 1b0:	0e 94 5c 00 	call	0xb8	; 0xb8 <_exit>
